{% extends 'base.html.twig' %}

{% block title %}User Management - Admin - RoboSEO{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .admin-nav .nav-link {
            color: #4e73df;
            padding: 1rem;
            border-radius: 0.35rem;
            margin-bottom: 0.5rem;
            transition: all 0.2s;
        }
        
        .admin-nav .nav-link:hover {
            background-color: #eaecf4;
        }
        
        .admin-nav .nav-link.active {
            background-color: #4e73df;
            color: white;
        }
        
        .admin-nav .nav-link i {
            margin-right: 0.5rem;
        }
        
        .filter-form label {
            font-weight: 600;
            font-size: 0.8rem;
            text-transform: uppercase;
            color: #4e73df;
        }
        
        .table-actions .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
        
        .user-status.active {
            color: #1cc88a;
        }
        
        .user-status.inactive {
            color: #e74a3b;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h3 mb-0 text-gray-800">User Management</h1>
            <p class="text-muted">Manage all users in the system.</p>
        </div>
    </div>

    <div class="row">
        <!-- Admin Navigation Sidebar -->
        <div class="col-xl-3 col-lg-4 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Admin Navigation</h6>
                </div>
                <div class="card-body">
                    <div class="admin-nav">
                        <a href="{{ path('app_admin_dashboard') }}" class="nav-link">
                            <i class="fas fa-tachometer-alt"></i> Dashboard
                        </a>
                        <a href="{{ path('app_admin_users') }}" class="nav-link active">
                            <i class="fas fa-users"></i> User Management
                        </a>
                        <a href="{{ path('app_admin_products') }}" class="nav-link">
                            <i class="fas fa-box"></i> Product Management
                        </a>
                        <a href="{{ path('app_admin_credits') }}" class="nav-link">
                            <i class="fas fa-coins"></i> Credits Management
                        </a>
                        <a href="{{ path('app_admin_subscriptions') }}" class="nav-link">
                            <i class="fas fa-receipt"></i> Subscription Plans
                        </a>
                        <a href="{{ path('app_admin_statistics') }}" class="nav-link">
                            <i class="fas fa-chart-bar"></i> System Statistics
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Quick Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a href="#" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createUserModal">
                            <i class="fas fa-user-plus"></i> Create New User
                        </a>
                        <a href="#" class="btn btn-success btn-sm">
                            <i class="fas fa-file-export"></i> Export Users
                        </a>
                        <button type="button" class="btn btn-danger btn-sm" id="bulkActionsBtn" disabled>
                            <i class="fas fa-cogs"></i> Bulk Actions <span class="badge bg-white text-danger" id="selectedCount">0</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Main Content Area -->
        <div class="col-xl-9 col-lg-8">
            <!-- Filters Card -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Filters</h6>
                </div>
                <div class="card-body">
                    <form class="filter-form" id="userFilterForm">
                        <input type="hidden" name="_token" value="{{ csrf_token('filter_users') }}">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label for="filterRole" class="form-label">Role</label>
                                <select class="form-select" id="filterRole" name="role">
                                    <option value="">All Roles</option>
                                    <option value="ROLE_ADMIN">Admin</option>
                                    <option value="ROLE_PREMIUM">Premium</option>
                                    <option value="ROLE_USER">Standard User</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label for="filterSubscription" class="form-label">Subscription</label>
                                <select class="form-select" id="filterSubscription" name="subscription">
                                    <option value="">All Subscriptions</option>
                                    <option value="starter">Starter</option>
                                    <option value="professional">Professional</option>
                                    <option value="enterprise">Enterprise</option>
                                    <option value="none">No Subscription</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label for="filterCredits" class="form-label">Credits</label>
                                <select class="form-select" id="filterCredits" name="credits">
                                    <option value="">All</option>
                                    <option value="zero">No Credits</option>
                                    <option value="low">Low (1-10)</option>
                                    <option value="medium">Medium (11-50)</option>
                                    <option value="high">High (50+)</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label for="filterStatus" class="form-label">Status</label>
                                <select class="form-select" id="filterStatus" name="status">
                                    <option value="">All</option>
                                    <option value="1">Active</option>
                                    <option value="0">Inactive</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label for="searchTerm" class="form-label">Search</label>
                                <input type="text" class="form-control" id="searchTerm" name="search" placeholder="Name, email, etc.">
                            </div>
                            <div class="col-md-4 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary me-2">
                                    <i class="fas fa-filter"></i> Apply Filters
                                </button>
                                <button type="reset" class="btn btn-secondary" id="resetFilters">
                                    <i class="fas fa-undo"></i> Reset
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Users Table -->
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 font-weight-bold text-primary">All Users</h6>
                    <div class="dropdown">
                        <button class="btn btn-sm btn-primary dropdown-toggle" type="button" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-download"></i> Export
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="exportDropdown">
                            <li><a class="dropdown-item" href="#">Export as CSV</a></li>
                            <li><a class="dropdown-item" href="#">Export as Excel</a></li>
                            <li><a class="dropdown-item" href="#">Export as PDF</a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover" id="usersTable" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th width="20">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="selectAll">
                                        </div>
                                    </th>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                    <th>Credits</th>
                                    <th>Subscription</th>
                                    <th>Status</th>
                                    <th>Registered</th>
                                    <th width="120">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for user in users %}
                                    <tr>
                                        <td>
                                            <div class="form-check">
                                                <input class="form-check-input user-select" type="checkbox" 
                                                       data-user-id="{{ user.id }}">
                                            </div>
                                        </td>
                                        <td>{{ user.id }}</td>
                                        <td>{{ user.firstName }} {{ user.lastName }}</td>
                                        <td>{{ user.email }}</td>
                                        <td>
                                            {% if 'ROLE_ADMIN' in user.roles %}
                                                <span class="badge bg-danger">Admin</span>
                                            {% elseif 'ROLE_PREMIUM' in user.roles %}
                                                <span class="badge bg-warning">Premium</span>
                                            {% else %}
                                                <span class="badge bg-secondary">User</span>
                                            {% endif %}
                                        </td>
                                        <td>{{ user.credits }}</td>
                                        <td>
                                            {% if user.subscriptionTier %}
                                                <span class="badge bg-info">{{ user.subscriptionTier|capitalize }}</span>
                                            {% else %}
                                                <span class="badge bg-light text-dark">None</span>
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% if user.isVerified %}
                                                <i class="fas fa-check-circle user-status active"></i>
                                            {% else %}
                                                <i class="fas fa-times-circle user-status inactive"></i>
                                            {% endif %}
                                        </td>
                                        <td>{{ user.createdAt|date('Y-m-d') }}</td>
                                        <td class="table-actions">
                                            <div class="btn-group btn-group-sm">
                                                <a href="{{ path('app_admin_user_view', {'id': user.id}) }}" 
                                                   class="btn btn-info" title="View User">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a href="{{ path('app_admin_user_edit', {'id': user.id}) }}" 
                                                   class="btn btn-primary" title="Edit User">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button" class="btn btn-warning" title="Adjust Credits"
                                                        data-bs-toggle="modal" data-bs-target="#adjustCreditsModal"
                                                        data-user-id="{{ user.id }}"
                                                        data-user-name="{{ user.firstName }} {{ user.lastName }}"
                                                        data-user-credits="{{ user.credits }}">
                                                    <i class="fas fa-coins"></i>
                                                </button>
                                                <button type="button" class="btn btn-danger" title="Delete User"
                                                        data-bs-toggle="modal" data-bs-target="#deleteUserModal"
                                                        data-user-id="{{ user.id }}"
                                                        data-user-name="{{ user.firstName }} {{ user.lastName }}">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <div>
                            <span class="text-muted">Showing {{ users|length }} users</span>
                        </div>
                        <nav aria-label="Page navigation">
                            <ul class="pagination">
                                <li class="page-item disabled">
                                    <a class="page-link" href="#" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                                <li class="page-item"><a class="page-link" href="#">2</a></li>
                                <li class="page-item"><a class="page-link" href="#">3</a></li>
                                <li class="page-item">
                                    <a class="page-link" href="#" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createUserModalLabel">Create New User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createUserForm" action="{{ path('app_admin_user_create') }}" method="post">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token('create_user') }}">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="firstName" class="form-label">First Name</label>
                            <input type="text" class="form-control" id="firstName" name="firstName" required>
                        </div>
                        <div class="col-md-6">
                            <label for="lastName" class="form-label">Last Name</label>
                            <input type="text" class="form-control" id="lastName" name="lastName" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="email" required>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" name="password" required>
                        </div>
                        <div class="col-md-6">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" id="confirmPassword" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="userRole" class="form-label">Role</label>
                            <select class="form-select" id="userRole" name="userRole">
                                <option value="ROLE_USER">Standard User</option>
                                <option value="ROLE_PREMIUM">Premium User</option>
                                <option value="ROLE_ADMIN">Admin</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="initialCredits" class="form-label">Initial Credits</label>
                            <input type="number" class="form-control" id="initialCredits" name="initialCredits" value="0" min="0">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="subscriptionTier" class="form-label">Subscription Tier</label>
                        <select class="form-select" id="subscriptionTier" name="subscriptionTier">
                            <option value="">No Subscription</option>
                            <option value="starter">Starter</option>
                            <option value="professional">Professional</option>
                            <option value="enterprise">Enterprise</option>
                        </select>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="isVerified" name="isVerified" checked>
                        <label class="form-check-label" for="isVerified">
                            Account Verified
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="createUserBtn" onclick="document.getElementById('createUserForm').submit();">Create User</button>
            </div>
        </div>
    </div>
</div>

<!-- Adjust Credits Modal -->
<div class="modal fade" id="adjustCreditsModal" tabindex="-1" aria-labelledby="adjustCreditsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="adjustCreditsModalLabel">Adjust Credits</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="adjustCreditsForm" action="{{ path('app_admin_user_adjust_credits', {'id': 0}) }}" method="post">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token('adjust_credits') }}">
                    <input type="hidden" id="creditUserId" name="adjustmentUser">
                    <div class="mb-3">
                        <label class="form-label">User</label>
                        <input type="text" class="form-control" id="creditUserName" readonly>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Current Credits</label>
                        <input type="text" class="form-control" id="currentCredits" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="adjustmentType" class="form-label">Adjustment Type</label>
                        <select class="form-select" id="adjustmentType">
                            <option value="add">Add Credits</option>
                            <option value="subtract">Remove Credits</option>
                            <option value="set">Set Exact Value</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="creditsAmount" class="form-label">Amount</label>
                        <input type="number" class="form-control" id="creditsAmount" min="0" value="0">
                    </div>
                    <div class="mb-3">
                        <label for="adjustmentReason" class="form-label">Reason (Optional)</label>
                        <textarea class="form-control" id="adjustmentReason" rows="2"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveCreditsBtn">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete User Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the user <strong id="deleteUserName"></strong>?</p>
                <p class="text-danger">This action cannot be undone. All user data including products, payment history, and activity will be permanently deleted.</p>
                <form id="deleteUserForm" action="{{ path('app_admin_user_delete', {'id': 0}) }}" method="post">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token('delete_user') }}">
                    <input type="hidden" id="deleteUserId" name="userId">
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="confirmDelete" required>
                        <label class="form-check-label" for="confirmDelete">
                            I understand this action is permanent and cannot be undone
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="deleteUserBtn" disabled>Delete User</button>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Actions Modal -->
<div class="modal fade" id="bulkActionsModal" tabindex="-1" aria-labelledby="bulkActionsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bulkActionsModalLabel">Bulk Actions</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Apply action to <span id="bulkCount">0</span> selected users:</p>
                <form id="bulkActionsForm" action="{{ path('app_admin_user_bulk_actions') }}" method="post">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token('bulk_actions') }}">
                    <input type="hidden" name="selectedUsers" id="selectedUsersInput">
                    <div class="mb-3">
                        <label for="bulkAction" class="form-label">Action</label>
                        <select class="form-select" id="bulkAction">
                            <option value="">Select an action...</option>
                            <option value="add_credits">Add Credits</option>
                            <option value="set_role">Change Role</option>
                            <option value="set_subscription">Set Subscription</option>
                            <option value="verify">Verify Accounts</option>
                            <option value="delete">Delete Users</option>
                        </select>
                    </div>
                    
                    <!-- Conditional fields based on action -->
                    <div id="bulkCreditsFields" class="d-none">
                        <div class="mb-3">
                            <label for="bulkCreditsAmount" class="form-label">Credits Amount</label>
                            <input type="number" class="form-control" id="bulkCreditsAmount" min="0" value="0">
                        </div>
                    </div>
                    
                    <div id="bulkRoleFields" class="d-none">
                        <div class="mb-3">
                            <label for="bulkRole" class="form-label">Role</label>
                            <select class="form-select" id="bulkRole">
                                <option value="ROLE_USER">Standard User</option>
                                <option value="ROLE_PREMIUM">Premium User</option>
                                <option value="ROLE_ADMIN">Admin</option>
                            </select>
                        </div>
                    </div>
                    
                    <div id="bulkSubscriptionFields" class="d-none">
                        <div class="mb-3">
                            <label for="bulkSubscription" class="form-label">Subscription</label>
                            <select class="form-select" id="bulkSubscription">
                                <option value="">No Subscription</option>
                                <option value="starter">Starter</option>
                                <option value="professional">Professional</option>
                                <option value="enterprise">Enterprise</option>
                            </select>
                        </div>
                    </div>
                    
                    <div id="bulkDeleteFields" class="d-none">
                        <div class="alert alert-danger">
                            This will permanently delete all selected users and their data. This action cannot be undone.
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="bulkConfirmDelete">
                            <label class="form-check-label" for="bulkConfirmDelete">
                                I understand this action is permanent and cannot be undone
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="applyBulkActionBtn">Apply Action</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle select all checkbox
    const selectAllCheckbox = document.getElementById('selectAll');
    const userCheckboxes = document.querySelectorAll('.user-select');
    const bulkActionsBtn = document.getElementById('bulkActionsBtn');
    const selectedCountSpan = document.getElementById('selectedCount');
    
    selectAllCheckbox.addEventListener('change', function() {
        userCheckboxes.forEach(checkbox => {
            checkbox.checked = selectAllCheckbox.checked;
        });
        updateSelectedCount();
    });
    
    // Handle individual checkboxes
    userCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            updateSelectedCount();
            // Update select all checkbox state
            if (!this.checked) {
                selectAllCheckbox.checked = false;
            } else {
                // Check if all checkboxes are checked
                const allChecked = Array.from(userCheckboxes).every(cb => cb.checked);
                selectAllCheckbox.checked = allChecked;
            }
        });
    });
    
    // Update selected count
    function updateSelectedCount() {
        const selectedCount = document.querySelectorAll('.user-select:checked').length;
        selectedCountSpan.textContent = selectedCount;
        bulkActionsBtn.disabled = selectedCount === 0;
    }
    
    // Handle filter form submission
    const filterForm = document.getElementById('userFilterForm');
    const usersTable = document.getElementById('usersTable').querySelector('tbody');
    
    filterForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Show loading state
        usersTable.innerHTML = '<tr><td colspan="10" class="text-center">Loading users...</td></tr>';
        
        // Collect form data
        const formData = new FormData(filterForm);
        
        // Send AJAX request
        fetch('{{ path('app_admin_users_filter') }}', {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            // Update the user count display
            const countDisplay = document.querySelector('.text-muted');
            if (countDisplay) {
                countDisplay.textContent = `Showing ${data.count} users`;
            }
            
            // Clear existing table rows
            usersTable.innerHTML = '';
            
            // If no results
            if (data.users.length === 0) {
                usersTable.innerHTML = '<tr><td colspan="10" class="text-center">No users found matching the criteria.</td></tr>';
                return;
            }
            
            // Add new rows for each user
            data.users.forEach(user => {
                const row = document.createElement('tr');
                
                // Handle role badge
                let roleBadge = '';
                if (user.roles.includes('ROLE_ADMIN')) {
                    roleBadge = '<span class="badge bg-danger">Admin</span>';
                } else if (user.roles.includes('ROLE_PREMIUM')) {
                    roleBadge = '<span class="badge bg-warning">Premium</span>';
                } else {
                    roleBadge = '<span class="badge bg-secondary">User</span>';
                }
                
                // Handle subscription badge
                let subscriptionBadge = '';
                if (user.subscriptionTier) {
                    subscriptionBadge = `<span class="badge bg-info">${user.subscriptionTier.charAt(0).toUpperCase() + user.subscriptionTier.slice(1)}</span>`;
                } else {
                    subscriptionBadge = '<span class="badge bg-light text-dark">None</span>';
                }
                
                // Handle status icon
                const statusIcon = user.isVerified 
                    ? '<i class="fas fa-check-circle user-status active"></i>' 
                    : '<i class="fas fa-times-circle user-status inactive"></i>';
                
                // Build row HTML
                row.innerHTML = `
                    <td>
                        <div class="form-check">
                            <input class="form-check-input user-select" type="checkbox" data-user-id="${user.id}">
                        </div>
                    </td>
                    <td>${user.id}</td>
                    <td>${user.firstName} ${user.lastName}</td>
                    <td>${user.email}</td>
                    <td>${roleBadge}</td>
                    <td>${user.credits}</td>
                    <td>${subscriptionBadge}</td>
                    <td>${statusIcon}</td>
                    <td>${user.createdAt}</td>
                    <td class="table-actions">
                        <div class="btn-group btn-group-sm">
                            <a href="/sellersbay/ecommerce-tools/public/admin/user/${user.id}" class="btn btn-info" title="View User">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a href="/sellersbay/ecommerce-tools/public/admin/user/${user.id}/edit" class="btn btn-primary" title="Edit User">
                                <i class="fas fa-edit"></i>
                            </a>
                            <button type="button" class="btn btn-warning" title="Adjust Credits"
                                    data-bs-toggle="modal" data-bs-target="#adjustCreditsModal"
                                    data-user-id="${user.id}"
                                    data-user-name="${user.firstName} ${user.lastName}"
                                    data-user-credits="${user.credits}">
                                <i class="fas fa-coins"></i>
                            </button>
                            <button type="button" class="btn btn-danger" title="Delete User"
                                    data-bs-toggle="modal" data-bs-target="#deleteUserModal"
                                    data-user-id="${user.id}"
                                    data-user-name="${user.firstName} ${user.lastName}">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                `;
                
                usersTable.appendChild(row);
            });
            
            // Reinitialize event listeners for the new checkboxes
            const newUserCheckboxes = document.querySelectorAll('.user-select');
            newUserCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    updateSelectedCount();
                    if (!this.checked) {
                        selectAllCheckbox.checked = false;
                    } else {
                        const allChecked = Array.from(newUserCheckboxes).every(cb => cb.checked);
                        selectAllCheckbox.checked = allChecked;
                    }
                });
            });
            
            // Reset the select all checkbox
            selectAllCheckbox.checked = false;
            updateSelectedCount();
        })
        .catch(error => {
            console.error('Error applying filters:', error);
            usersTable.innerHTML = '<tr><td colspan="10" class="text-center text-danger">Error loading users. Please try again.</td></tr>';
        });
    });
    
    // Handle reset button
    document.getElementById('resetFilters').addEventListener('click', function() {
        // Reset all form fields
        filterForm.reset();
        
        // Submit the form to reload all users
        filterForm.dispatchEvent(new Event('submit'));
    });
    
    // Handle bulk actions button
    bulkActionsBtn.addEventListener('click', function() {
        const bulkCountSpan = document.getElementById('bulkCount');
        bulkCountSpan.textContent = document.querySelectorAll('.user-select:checked').length;
        
        // Show modal
        const bulkActionsModal = new bootstrap.Modal(document.getElementById('bulkActionsModal'));
        bulkActionsModal.show();
    });
    
    // Handle bulk action selection
    const bulkActionSelect = document.getElementById('bulkAction');
    bulkActionSelect.addEventListener('change', function() {
        // Hide all conditional fields
        document.getElementById('bulkCreditsFields').classList.add('d-none');
        document.getElementById('bulkRoleFields').classList.add('d-none');
        document.getElementById('bulkSubscriptionFields').classList.add('d-none');
        document.getElementById('bulkDeleteFields').classList.add('d-none');
        
        // Show relevant fields based on selection
        switch(this.value) {
            case 'add_credits':
                document.getElementById('bulkCreditsFields').classList.remove('d-none');
                break;
            case 'set_role':
                document.getElementById('bulkRoleFields').classList.remove('d-none');
                break;
            case 'set_subscription':
                document.getElementById('bulkSubscriptionFields').classList.remove('d-none');
                break;
            case 'delete':
                document.getElementById('bulkDeleteFields').classList.remove('d-none');
                break;
        }
    });
    
    // Handle adjust credits modal
    const adjustCreditsModal = document.getElementById('adjustCreditsModal');
    adjustCreditsModal.addEventListener('show.bs.modal', function(event) {
        const button = event.relatedTarget;
        const userId = button.getAttribute('data-user-id');
        const userName = button.getAttribute('data-user-name');
        const userCredits = button.getAttribute('data-user-credits');
        
        // Update form action URL with the correct user ID
        const form = document.getElementById('adjustCreditsForm');
        form.action = form.action.replace('/0/', '/' + userId + '/');
        
        document.getElementById('creditUserId').value = userId;
        document.getElementById('creditUserName').value = userName;
        document.getElementById('currentCredits').value = userCredits;
    });
    
    // Handle delete user modal
    const deleteUserModal = document.getElementById('deleteUserModal');
    deleteUserModal.addEventListener('show.bs.modal', function(event) {
        const button = event.relatedTarget;
        const userId = button.getAttribute('data-user-id');
        const userName = button.getAttribute('data-user-name');
        
        document.getElementById('deleteUserId').value = userId;
        document.getElementById('deleteUserName').textContent = userName;
    });
    
    // Handle confirm delete checkbox
    const confirmDeleteCheckbox = document.getElementById('confirmDelete');
    const deleteUserBtn = document.getElementById('deleteUserBtn');
    
    confirmDeleteCheckbox.addEventListener('change', function() {
        deleteUserBtn.disabled = !this.checked;
    });
    
    // Handle delete button click
    deleteUserBtn.addEventListener('click', function() {
        if (confirmDeleteCheckbox.checked) {
            document.getElementById('deleteUserForm').submit();
        }
    });
    
    // Handle adjust credits button click
    document.getElementById('saveCreditsBtn').addEventListener('click', function() {
        const form = document.getElementById('adjustCreditsForm');
        
        // Add adjustment type and amount to form
        const adjustmentType = document.getElementById('adjustmentType').value;
        const amount = document.getElementById('creditsAmount').value;
        const reason = document.getElementById('adjustmentReason').value;
        
        // Create and append hidden inputs
        let input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'adjustmentType';
        input.value = adjustmentType;
        form.appendChild(input);
        
        input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'creditsAmount';
        input.value = amount;
        form.appendChild(input);
        
        if (reason) {
            input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'reason';
            input.value = reason;
            form.appendChild(input);
        }
        
        form.submit();
    });
    
    // Handle bulk actions button click
    document.getElementById('applyBulkActionBtn').addEventListener('click', function() {
        const form = document.getElementById('bulkActionsForm');
        const selectedUsers = [];
        
        // Collect all selected user IDs
        document.querySelectorAll('.user-select:checked').forEach(checkbox => {
            selectedUsers.push(checkbox.getAttribute('data-user-id'));
        });
        
        // Set selected users in hidden input
        document.getElementById('selectedUsersInput').value = selectedUsers.join(',');
        
        // Add selected action type to form
        const actionType = document.getElementById('bulkAction').value;
        if (!actionType) {
            alert('Please select an action to perform');
            return;
        }
        
        let input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'actionType';
        input.value = actionType;
        form.appendChild(input);
        
        // Add action-specific values
        switch (actionType) {
            case 'add_credits':
                input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'creditsAmount';
                input.value = document.getElementById('bulkCreditsAmount').value;
                form.appendChild(input);
                break;
            case 'set_role':
                input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'role';
                input.value = document.getElementById('bulkRole').value;
                form.appendChild(input);
                break;
            case 'set_subscription':
                input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'subscription';
                input.value = document.getElementById('bulkSubscription').value;
                form.appendChild(input);
                break;
            case 'delete':
                if (!document.getElementById('bulkConfirmDelete').checked) {
                    alert('You must confirm the deletion of users');
                    return;
                }
                break;
        }
        
        form.submit();
    });
    
    // Initialize with correct selected count
    updateSelectedCount();
});
</script>
{% endblock %}