{% extends 'base.html.twig' %}

{% block title %}Credits Management - Admin - RoboSEO{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .admin-nav .nav-link {
            color: #4e73df;
            padding: 1rem;
            border-radius: 0.35rem;
            margin-bottom: 0.5rem;
            transition: all 0.2s;
        }
        
        .admin-nav .nav-link:hover {
            background-color: #eaecf4;
        }
        
        .admin-nav .nav-link.active {
            background-color: #4e73df;
            color: white;
        }
        
        .admin-nav .nav-link i {
            margin-right: 0.5rem;
        }
        
        .stats-card {
            border-left: 4px solid #4e73df;
            transition: transform 0.2s;
        }
        
        .stats-card:hover {
            transform: translateY(-5px);
        }
        
        .stats-card.credits { border-left-color: #f6c23e; }
        .stats-card.revenue { border-left-color: #1cc88a; }
        .stats-card.usage { border-left-color: #36b9cc; }
        
        .credit-package-card {
            border: 1px solid #e3e6f0;
            border-radius: 0.35rem;
            transition: all 0.2s;
        }
        
        .credit-package-card:hover {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        
        .credit-package-card.featured {
            border: 2px solid #4e73df;
            position: relative;
        }
        
        .credit-package-card.featured::before {
            content: 'Best Value';
            position: absolute;
            top: -12px;
            right: 10px;
            background-color: #4e73df;
            color: white;
            padding: 2px 10px;
            border-radius: 5px;
            font-size: 0.75rem;
            font-weight: bold;
        }
        
        .edit-package-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            opacity: 0.3;
            transition: opacity 0.2s;
        }
        
        .credit-package-card:hover .edit-package-btn {
            opacity: 1;
        }
        
        .promo-badge {
            background-color: #e74a3b;
            color: white;
            padding: 3px 8px;
            border-radius: 8px;
            font-size: 0.7rem;
            font-weight: bold;
            display: inline-block;
            margin-bottom: 5px;
        }
        
        .stats-update-indicator {
            font-size: 0.7rem;
            color: #6c757d;
            margin-top: 5px;
        }
        
        .stats-value {
            transition: all 0.3s ease;
        }
        
        .stats-value.highlight {
            color: #4e73df;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h3 mb-0 text-gray-800">Credits Management</h1>
            <p class="text-muted">Manage credit packages, pricing, and track credit usage.</p>
        </div>
    </div>

    <div class="row">
        <!-- Admin Navigation Sidebar -->
        <div class="col-xl-3 col-lg-4 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Admin Navigation</h6>
                </div>
                <div class="card-body">
                    <div class="admin-nav">
                        <a href="{{ path('app_admin_dashboard') }}" class="nav-link">
                            <i class="fas fa-tachometer-alt"></i> Dashboard
                        </a>
                        <a href="{{ path('app_admin_users') }}" class="nav-link">
                            <i class="fas fa-users"></i> User Management
                        </a>
                        <a href="{{ path('app_admin_products') }}" class="nav-link">
                            <i class="fas fa-box"></i> Product Management
                        </a>
                        <a href="{{ path('app_admin_credits') }}" class="nav-link active">
                            <i class="fas fa-coins"></i> Credits Management
                        </a>
                        <a href="{{ path('app_admin_subscriptions') }}" class="nav-link">
                            <i class="fas fa-receipt"></i> Subscription Plans
                        </a>
                        <a href="{{ path('app_admin_statistics') }}" class="nav-link">
                            <i class="fas fa-chart-bar"></i> System Statistics
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Quick Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createPackageModal">
                            <i class="fas fa-plus"></i> Create New Package
                        </button>
                        <button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#creditsAdjustmentModal">
                            <i class="fas fa-user-edit"></i> Adjust User Credits
                        </button>
                        <button type="button" class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#creditPromotionModal">
                            <i class="fas fa-tags"></i> Create Promotion
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Main Content Area -->
        <div class="col-xl-9 col-lg-8">
            <!-- Stats Cards Row -->
            <div class="row mb-4">
                <!-- Total Credits Card -->
                <div class="col-xl-4 col-md-6 mb-4">
                    <div class="card h-100 shadow stats-card credits">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Total Credits</div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800 stats-value" id="stats-total-credits">{{ stats.total_credits }}</div>
                                    <div class="text-xs text-muted">System-wide</div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-coins fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Revenue Card -->
                <div class="col-xl-4 col-md-6 mb-4">
                    <div class="card h-100 shadow stats-card revenue">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Revenue (MTD)</div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800 stats-value" id="stats-revenue-mtd">${{ stats.revenue_mtd }}</div>
                                    <div class="text-xs text-success" id="stats-revenue-growth">
                                        <i class="fas fa-arrow-up me-1"></i>15.3% from last month
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Usage Card -->
                <div class="col-xl-4 col-md-6 mb-4">
                    <div class="card h-100 shadow stats-card usage">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Credits Used (MTD)</div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800 stats-value" id="stats-credits-used">{{ stats.credits_used_mtd }}</div>
                                    <div class="text-xs text-muted" id="stats-daily-avg">Avg. 72.6 per day</div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-chart-line fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Stats update indicator -->
            <div class="row mb-4">
                <div class="col-12 text-end">
                    <div class="stats-update-indicator">
                        <i class="fas fa-sync-alt"></i> <span id="stats-last-updated">Statistics are now real-time</span>
                        <button class="btn btn-sm btn-outline-primary ms-2" id="refresh-stats-btn">
                            <i class="fas fa-sync-alt"></i> Refresh Now
                        </button>
                    </div>
                </div>
            </div>

            <!-- Credit Packages -->
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 font-weight-bold text-primary">Credit Packages</h6>
                    <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#createPackageModal">
                        <i class="fas fa-plus"></i> New Package
                    </button>
                </div>
                <div class="card-body">
                    <div class="row">
                        <!-- Small Package -->
                        <div class="col-lg-4 mb-4">
                            <div class="card h-100 credit-package-card">
                                <button class="btn btn-sm btn-link edit-package-btn" data-bs-toggle="modal" data-bs-target="#editPackageModal" data-package-id="small">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <div class="card-body text-center">
                                    <h3 class="mb-4">Small Package</h3>
                                    <div class="pricing mb-4">
                                        <div class="h1 mb-0">$9.99</div>
                                        <div class="text-muted">One-time payment</div>
                                    </div>
                                    <div class="credits-badge mb-4">
                                        <span class="badge bg-primary p-2">
                                            <i class="fas fa-coins"></i>
                                            10 Credits
                                        </span>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span class="text-muted">
                                            <i class="fas fa-shopping-cart me-1"></i> 78 sold
                                        </span>
                                        <span class="text-muted">
                                            $0.99 / credit
                                        </span>
                                    </div>
                                </div>
                                <div class="card-footer bg-transparent d-flex justify-content-between">
                                    <button class="btn btn-sm btn-secondary" data-bs-toggle="modal" data-bs-target="#packageStatsModal" data-package-id="small">
                                        <i class="fas fa-chart-bar"></i> Stats
                                    </button>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="smallPackageActive" checked>
                                        <label class="form-check-label" for="smallPackageActive">
                                            Active
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Medium Package -->
                        <div class="col-lg-4 mb-4">
                            <div class="card h-100 credit-package-card featured">
                                <button class="btn btn-sm btn-link edit-package-btn" data-bs-toggle="modal" data-bs-target="#editPackageModal" data-package-id="medium">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <div class="card-body text-center">
                                    <h3 class="mb-4">Medium Package</h3>
                                    <div class="pricing mb-4">
                                        <div class="promo-badge">SALE -20%</div>
                                        <div class="text-muted text-decoration-line-through">$49.99</div>
                                        <div class="h1 mb-0">$39.99</div>
                                        <div class="text-muted">One-time payment</div>
                                    </div>
                                    <div class="credits-badge mb-4">
                                        <span class="badge bg-primary p-2">
                                            <i class="fas fa-coins"></i>
                                            50 Credits
                                        </span>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span class="text-muted">
                                            <i class="fas fa-shopping-cart me-1"></i> 152 sold
                                        </span>
                                        <span class="text-muted">
                                            $0.80 / credit
                                        </span>
                                    </div>
                                </div>
                                <div class="card-footer bg-transparent d-flex justify-content-between">
                                    <button class="btn btn-sm btn-secondary" data-bs-toggle="modal" data-bs-target="#packageStatsModal" data-package-id="medium">
                                        <i class="fas fa-chart-bar"></i> Stats
                                    </button>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="mediumPackageActive" checked>
                                        <label class="form-check-label" for="mediumPackageActive">
                                            Active
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Large Package -->
                        <div class="col-lg-4 mb-4">
                            <div class="card h-100 credit-package-card">
                                <button class="btn btn-sm btn-link edit-package-btn" data-bs-toggle="modal" data-bs-target="#editPackageModal" data-package-id="large">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <div class="card-body text-center">
                                    <h3 class="mb-4">Large Package</h3>
                                    <div class="pricing mb-4">
                                        <div class="h1 mb-0">$69.99</div>
                                        <div class="text-muted">One-time payment</div>
                                    </div>
                                    <div class="credits-badge mb-4">
                                        <span class="badge bg-primary p-2">
                                            <i class="fas fa-coins"></i>
                                            100 Credits
                                        </span>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span class="text-muted">
                                            <i class="fas fa-shopping-cart me-1"></i> 64 sold
                                        </span>
                                        <span class="text-muted">
                                            $0.70 / credit
                                        </span>
                                    </div>
                                </div>
                                <div class="card-footer bg-transparent d-flex justify-content-between">
                                    <button class="btn btn-sm btn-secondary" data-bs-toggle="modal" data-bs-target="#packageStatsModal" data-package-id="large">
                                        <i class="fas fa-chart-bar"></i> Stats
                                    </button>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="largePackageActive" checked>
                                        <label class="form-check-label" for="largePackageActive">
                                            Active
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Credit Usage Statistics -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Credit Usage Statistics</h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-8 mb-4">
                            <h6 class="small font-weight-bold text-uppercase mb-3">Credit Usage Over Time</h6>
                            <div class="chart-container" style="height: 300px;">
                                <canvas id="creditUsageChart"></canvas>
                            </div>
                        </div>
                        <div class="col-lg-4 mb-4">
                            <h6 class="small font-weight-bold text-uppercase mb-3">Usage by Package</h6>
                            <div class="chart-container" style="height: 300px;">
                                <canvas id="packageDistributionChart"></canvas>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row mt-3">
                        <div class="col-md-6 mb-4">
                            <h6 class="small font-weight-bold text-uppercase mb-3">Most Active Users</h6>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>User</th>
                                            <th>Credits Purchased</th>
                                            <th>Credits Used</th>
                                            <th>Remaining</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td><a href="#">John Doe</a></td>
                                            <td>250</td>
                                            <td>187</td>
                                            <td>63</td>
                                        </tr>
                                        <tr>
                                            <td><a href="#">Jane Smith</a></td>
                                            <td>150</td>
                                            <td>122</td>
                                            <td>28</td>
                                        </tr>
                                        <tr>
                                            <td><a href="#">Mike Johnson</a></td>
                                            <td>100</td>
                                            <td>84</td>
                                            <td>16</td>
                                        </tr>
                                        <tr>
                                            <td><a href="#">Sarah Williams</a></td>
                                            <td>200</td>
                                            <td>75</td>
                                            <td>125</td>
                                        </tr>
                                        <tr>
                                            <td><a href="#">David Brown</a></td>
                                            <td>50</td>
                                            <td>47</td>
                                            <td>3</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <h6 class="small font-weight-bold text-uppercase mb-3">Recent Credit Transactions</h6>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>User</th>
                                            <th>Type</th>
                                            <th>Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>2023-12-15</td>
                                            <td><a href="#">John Doe</a></td>
                                            <td><span class="badge bg-success">Purchase</span></td>
                                            <td>+50</td>
                                        </tr>
                                        <tr>
                                            <td>2023-12-14</td>
                                            <td><a href="#">Sarah Williams</a></td>
                                            <td><span class="badge bg-danger">Usage</span></td>
                                            <td>-1</td>
                                        </tr>
                                        <tr>
                                            <td>2023-12-14</td>
                                            <td><a href="#">Mike Johnson</a></td>
                                            <td><span class="badge bg-success">Purchase</span></td>
                                            <td>+10</td>
                                        </tr>
                                        <tr>
                                            <td>2023-12-13</td>
                                            <td><a href="#">Jane Smith</a></td>
                                            <td><span class="badge bg-warning">Adjustment</span></td>
                                            <td>+5</td>
                                        </tr>
                                        <tr>
                                            <td>2023-12-12</td>
                                            <td><a href="#">David Brown</a></td>
                                            <td><span class="badge bg-danger">Usage</span></td>
                                            <td>-2</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<!-- Create Package Modal -->
<div class="modal fade" id="createPackageModal" tabindex="-1" aria-labelledby="createPackageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createPackageModalLabel">Create New Credit Package</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createPackageForm" action="{{ path('app_admin_credits_create') }}" method="POST">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token('create_package') }}">
                    <div class="mb-3">
                        <label for="packageName" class="form-label">Package Name</label>
                        <input type="text" class="form-control" id="packageName" name="packageName" required>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="packageCredits" class="form-label">Number of Credits</label>
                            <input type="number" class="form-control" id="packageCredits" name="packageCredits" min="1" required>
                        </div>
                        <div class="col-md-6">
                            <label for="packagePrice" class="form-label">Price (USD)</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input type="number" class="form-control" id="packagePrice" name="packagePrice" min="0.01" step="0.01" required>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="packageDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="packageDescription" name="packageDescription" rows="2"></textarea>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="packageDiscount" class="form-label">Discount (%)</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="packageDiscount" name="packageDiscount" min="0" max="100" value="0">
                                <span class="input-group-text">%</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="packageOrder" class="form-label">Display Order</label>
                            <input type="number" class="form-control" id="packageOrder" name="packageDisplayOrder" min="1" value="1">
                        </div>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="packageIsFeatured" name="packageIsFeatured">
                        <label class="form-check-label" for="packageIsFeatured">
                            Feature this package
                        </label>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="packageIsActive" name="packageIsActive" checked>
                        <label class="form-check-label" for="packageIsActive">
                            Package is active
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveNewPackageBtn" onclick="document.getElementById('createPackageForm').submit()">Create Package</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Package Modal -->
<div class="modal fade" id="editPackageModal" tabindex="-1" aria-labelledby="editPackageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editPackageModalLabel">Edit Credit Package</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editPackageForm" method="POST">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token('edit_package') }}">
                    <input type="hidden" id="editPackageId" name="id">
                    <div class="mb-3">
                        <label for="editPackageName" class="form-label">Package Name</label>
                        <input type="text" class="form-control" id="editPackageName" name="packageName" required>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="editPackageCredits" class="form-label">Number of Credits</label>
                            <input type="number" class="form-control" id="editPackageCredits" name="packageCredits" min="1" required>
                        </div>
                        <div class="col-md-6">
                            <label for="editPackagePrice" class="form-label">Price (USD)</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input type="number" class="form-control" id="editPackagePrice" name="packagePrice" min="0.01" step="0.01" required>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="editPackageDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editPackageDescription" name="packageDescription" rows="2"></textarea>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="editPackageDiscount" class="form-label">Discount (%)</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="editPackageDiscount" name="packageDiscount" min="0" max="100" value="0">
                                <span class="input-group-text">%</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="editPackageOrder" class="form-label">Display Order</label>
                            <input type="number" class="form-control" id="editPackageOrder" name="packageDisplayOrder" min="1" value="1">
                        </div>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="editPackageIsFeatured" name="packageIsFeatured">
                        <label class="form-check-label" for="editPackageIsFeatured">
                            Feature this package
                        </label>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="editPackageIsActive" name="packageIsActive" checked>
                        <label class="form-check-label" for="editPackageIsActive">
                            Package is active
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger me-auto" id="deletePackageBtn" onclick="submitDeletePackageForm()">Delete Package</button>
                <button type="button" class="btn btn-primary" id="savePackageChangesBtn" onclick="document.getElementById('editPackageForm').submit()">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Credits Adjustment Modal -->
<div class="modal fade" id="creditsAdjustmentModal" tabindex="-1" aria-labelledby="creditsAdjustmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="creditsAdjustmentModalLabel">Adjust User Credits</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="creditsAdjustmentForm" action="{{ path('app_admin_credits_adjust_user') }}" method="POST">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token('adjust_credits') }}">
                    <div class="mb-3">
                        <label for="adjustmentUser" class="form-label">User</label>
                        <select class="form-select" id="adjustmentUser" name="adjustmentUser" required>
                            <option value="">Select a user...</option>
                            <option value="1">John Doe - john@example.com</option>
                            <option value="2">Jane Smith - jane@example.com</option>
                            <option value="3">Mike Johnson - mike@example.com</option>
                            <option value="4">Sarah Williams - sarah@example.com</option>
                            <option value="5">David Brown - david@example.com</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="currentCredits" class="form-label">Current Credits</label>
                        <input type="text" class="form-control" id="currentCredits" readonly value="0">
                    </div>
                    <div class="mb-3">
                        <label for="adjustmentType" class="form-label">Adjustment Type</label>
                        <select class="form-select" id="adjustmentType" name="adjustmentType">
                            <option value="add">Add Credits</option>
                            <option value="subtract">Remove Credits</option>
                            <option value="set">Set Exact Value</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="adjustmentAmount" class="form-label">Amount</label>
                        <input type="number" class="form-control" id="adjustmentAmount" name="adjustmentAmount" min="0" value="0" required>
                    </div>
                    <div class="mb-3">
                        <label for="adjustmentReason" class="form-label">Reason</label>
                        <textarea class="form-control" id="adjustmentReason" name="adjustmentReason" rows="2" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="adjustmentNewTotal" class="form-label">New Total Credits</label>
                        <input type="text" class="form-control" id="adjustmentNewTotal" readonly value="0">
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="notifyUser" name="notifyUser">
                        <label class="form-check-label" for="notifyUser">
                            Notify user via email
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveAdjustmentBtn" onclick="document.getElementById('creditsAdjustmentForm').submit()">Save Adjustment</button>
            </div>
        </div>
    </div>
</div>

<!-- Credit Promotion Modal -->
<div class="modal fade" id="creditPromotionModal" tabindex="-1" aria-labelledby="creditPromotionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="creditPromotionModalLabel">Create Credit Promotion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="creditPromotionForm" method="POST">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token('create_promotion') }}">
                    <div class="mb-3">
                        <label for="promotionName" class="form-label">Promotion Name</label>
                        <input type="text" class="form-control" id="promotionName" name="promotionName" required>
                    </div>
                    <div class="mb-3">
                        <label for="promotionType" class="form-label">Promotion Type</label>
                        <select class="form-select" id="promotionType" name="promotionType">
                            <option value="discount">Percentage Discount</option>
                            <option value="bonus">Bonus Credits</option>
                        </select>
                    </div>
                    <div class="mb-3 promotion-discount">
                        <label for="discountPercentage" class="form-label">Discount Percentage</label>
                        <div class="input-group">
                            <input type="number" class="form-control" id="discountPercentage" name="discountPercentage" min="1" max="100" value="10" required>
                            <span class="input-group-text">%</span>
                        </div>
                    </div>
                    <div class="mb-3 promotion-bonus d-none">
                        <label for="bonusCredits" class="form-label">Bonus Credits</label>
                        <input type="number" class="form-control" id="bonusCredits" name="bonusCredits" min="1" value="5" required>
                    </div>
                    <div class="mb-3">
                        <label for="promotionPackages" class="form-label">Apply to Packages</label>
                        <select class="form-select" id="promotionPackages" name="promotionPackages[]" multiple>
                            <option value="small">Small Package</option>
                            <option value="medium">Medium Package</option>
                            <option value="large">Large Package</option>
                        </select>
                        <small class="form-text text-muted">Hold Ctrl/Cmd to select multiple packages</small>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="promotionStartDate" class="form-label">Start Date</label>
                            <input type="date" class="form-control" id="promotionStartDate" name="promotionStartDate" required>
                        </div>
                        <div class="col-md-6">
                            <label for="promotionEndDate" class="form-label">End Date</label>
                            <input type="date" class="form-control" id="promotionEndDate" name="promotionEndDate" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="promotionCode" class="form-label">Promo Code (Optional)</label>
                        <input type="text" class="form-control" id="promotionCode" name="promotionCode">
                        <small class="form-text text-muted">Leave blank to apply automatically</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="savePromotionBtn">Create Promotion</button>
            </div>
        </div>
    </div>
</div>

<!-- Package Stats Modal -->
<div class="modal fade" id="packageStatsModal" tabindex="-1" aria-labelledby="packageStatsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="packageStatsModalLabel">Package Statistics</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h4 id="packageStatsTitle">Small Package</h4>
                <div class="row mb-4">
                    <div class="col-md-3 mb-3">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h6 class="small text-muted mb-2">Total Sales</h6>
                                <div class="h3 mb-0">78</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h6 class="small text-muted mb-2">Revenue</h6>
                                <div class="h3 mb-0">$779.22</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h6 class="small text-muted mb-2">Credits Sold</h6>
                                <div class="h3 mb-0">780</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h6 class="small text-muted mb-2">Conversion Rate</h6>
                                <div class="h3 mb-0">7.8%</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-8 mb-4">
                        <h6 class="small font-weight-bold text-uppercase mb-3">Sales Over Time</h6>
                        <div class="chart-container" style="height: 250px;">
                            <canvas id="packageSalesChart"></canvas>
                        </div>
                    </div>
                    <div class="col-md-4 mb-4">
                        <h6 class="small font-weight-bold text-uppercase mb-3">Recent Purchases</h6>
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>User</th>
                                        <th>Amount</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>2023-12-15</td>
                                        <td>John D.</td>
                                        <td>$9.99</td>
                                    </tr>
                                    <tr>
                                        <td>2023-12-14</td>
                                        <td>Sarah W.</td>
                                        <td>$9.99</td>
                                    </tr>
                                    <tr>
                                        <td>2023-12-14</td>
                                        <td>Mike J.</td>
                                        <td>$9.99</td>
                                    </tr>
                                    <tr>
                                        <td>2023-12-13</td>
                                        <td>Jane S.</td>
                                        <td>$9.99</td>
                                    </tr>
                                    <tr>
                                        <td>2023-12-12</td>
                                        <td>David B.</td>
                                        <td>$9.99</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Export Data</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set up real-time statistics updates
            const updateInterval = 30000; // Update every 30 seconds
            let updateTimer;
            
            // Function to format time
            function formatTime(date) {
                const hours = date.getHours().toString().padStart(2, '0');
                const minutes = date.getMinutes().toString().padStart(2, '0');
                const seconds = date.getSeconds().toString().padStart(2, '0');
                return `${hours}:${minutes}:${seconds}`;
            }
            
            // Function to highlight changed values
            function highlightValue(element) {
                element.classList.add('highlight');
                setTimeout(() => {
                    element.classList.remove('highlight');
                }, 1500);
            }
            
            // Function to format number with commas
            function formatNumber(num) {
                return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }
            
            // Function to fetch latest statistics
            function fetchStats() {
                // In a real implementation, this would be an actual API endpoint
                // For demo purposes, we'll simulate a response
                const mockData = {
                    stats: {
                        total_credits: Math.floor(Math.random() * 5000) + 20000,
                        revenue_mtd: (Math.random() * 10000 + 5000).toFixed(2),
                        revenue_growth: (Math.random() * 20).toFixed(1),
                        credits_used_mtd: Math.floor(Math.random() * 1000) + 2000,
                        daily_avg_usage: Math.floor(Math.random() * 100) + 50
                    }
                };
                
                const stats = mockData.stats;
                
                // Update elements and highlight changes
                const totalCreditsEl = document.getElementById('stats-total-credits');
                if (totalCreditsEl.textContent != formatNumber(stats.total_credits)) {
                    totalCreditsEl.textContent = formatNumber(stats.total_credits);
                    highlightValue(totalCreditsEl);
                }
                
                const revenueMtdEl = document.getElementById('stats-revenue-mtd');
                if (revenueMtdEl.textContent != '$' + stats.revenue_mtd) {
                    revenueMtdEl.textContent = '$' + stats.revenue_mtd;
                    highlightValue(revenueMtdEl);
                }
                
                const revenueGrowthEl = document.getElementById('stats-revenue-growth');
                revenueGrowthEl.innerHTML = `<i class="fas fa-arrow-up me-1"></i>${stats.revenue_growth}% from last month`;
                
                const creditsUsedEl = document.getElementById('stats-credits-used');
                if (creditsUsedEl.textContent != formatNumber(stats.credits_used_mtd)) {
                    creditsUsedEl.textContent = formatNumber(stats.credits_used_mtd);
                    highlightValue(creditsUsedEl);
                }
                
                const dailyAvgEl = document.getElementById('stats-daily-avg');
                dailyAvgEl.textContent = `Avg. ${stats.daily_avg_usage} per day`;
                
                // Update last updated time
                const now = new Date();
                document.getElementById('stats-last-updated').textContent = `Last updated at ${formatTime(now)}`;
                
                /*
                // This would be the actual API call in a real implementation
                fetch('{{ path('app_admin_api_credit_stats') }}')
                    .then(response => response.json())
                    .then(data => {
                        // Process data here
                    })
                    .catch(error => {
                        console.error('Error fetching statistics:', error);
                        document.getElementById('stats-last-updated').textContent = 'Failed to update statistics';
                    });
                */
            }
            
            // Set up the interval
            function startUpdateInterval() {
                // Clear any existing interval
                if (updateTimer) {
                    clearInterval(updateTimer);
                }
                
                // Set new interval
                updateTimer = setInterval(fetchStats, updateInterval);
                
                // Update immediately
                fetchStats();
            }
            
            // Initialize updates
            startUpdateInterval();
            
            // Set up manual refresh button
            const refreshBtn = document.getElementById('refresh-stats-btn');
            if (refreshBtn) {
                refreshBtn.addEventListener('click', function() {
                    this.disabled = true;
                    this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
                    
                    fetchStats();
                    
                    // Re-enable button after a delay
                    setTimeout(() => {
                        this.disabled = false;
                        this.innerHTML = '<i class="fas fa-sync-alt"></i> Refresh Now';
                    }, 1000);
                    
                    // Reset the interval timer
                    startUpdateInterval();
                });
            }
            
            // Pause updates when tab is not visible to save resources
            document.addEventListener('visibilitychange', function() {
                if (document.hidden) {
                    clearInterval(updateTimer);
                } else {
                    startUpdateInterval();
                }
            });
            
            // Setup for credit adjustment functionality
            const adjustmentUserSelect = document.getElementById('adjustmentUser');
            const adjustmentCurrentCredits = document.getElementById('currentCredits');
            const adjustmentTypeSelect = document.getElementById('adjustmentType');
            const adjustmentAmount = document.getElementById('adjustmentAmount');
            const adjustmentNewTotal = document.getElementById('adjustmentNewTotal');
            
            // Function to calculate new total credits after adjustment
            function calculateNewTotal() {
                const currentCredits = parseInt(adjustmentCurrentCredits.value) || 0;
                const amount = parseInt(adjustmentAmount.value) || 0;
                const type = adjustmentTypeSelect.value;
                let newTotal = currentCredits;
                
                switch (type) {
                    case 'add':
                        newTotal = currentCredits + amount;
                        break;
                    case 'subtract':
                        newTotal = Math.max(0, currentCredits - amount);
                        break;
                    case 'set':
                        newTotal = amount;
                        break;
                }
                
                adjustmentNewTotal.value = newTotal;
            }
            
            // Set up event listeners for credit adjustment
            if (adjustmentTypeSelect && adjustmentAmount) {
                adjustmentTypeSelect.addEventListener('change', calculateNewTotal);
                adjustmentAmount.addEventListener('input', calculateNewTotal);
            }
            
            // Handle user selection for credit adjustment
            if (adjustmentUserSelect) {
                adjustmentUserSelect.addEventListener('change', function() {
                    // In a real implementation, you would fetch user data via AJAX
                    // For demo purposes, we'll set random values
                    const userId = this.value;
                    if (userId) {
                        const randomCredits = Math.floor(Math.random() * 500);
                        adjustmentCurrentCredits.value = randomCredits;
                        calculateNewTotal();
                    } else {
                        adjustmentCurrentCredits.value = "0";
                        adjustmentNewTotal.value = "0";
                    }
                });
            }
            
            // Set up credit adjustment form submission
            const creditsAdjustmentForm = document.getElementById('creditsAdjustmentForm');
            const saveAdjustmentBtn = document.getElementById('saveAdjustmentBtn');
            
            if (saveAdjustmentBtn && creditsAdjustmentForm) {
                saveAdjustmentBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // In a production environment, you'd submit to the real endpoint
                    // For demo purposes, we'll just show a success message
                    
                    // Basic form validation
                    const userId = adjustmentUserSelect.value;
                    const amount = adjustmentAmount.value;
                    const reason = document.getElementById('adjustmentReason').value;
                    
                    if (!userId) {
                        alert('Please select a user');
                        return;
                    }
                    
                    if (amount <= 0) {
                        alert('Please enter a valid amount');
                        return;
                    }
                    
                    if (!reason.trim()) {
                        alert('Please provide a reason for the adjustment');
                        return;
                    }
                    
                    alert('Credits adjusted successfully!');
                    
                    // Close the modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('creditsAdjustmentModal'));
                    if (modal) {
                        modal.hide();
                    }
                    
                    // Reset form
                    creditsAdjustmentForm.reset();
                    adjustmentCurrentCredits.value = "0";
                    adjustmentNewTotal.value = "0";
                });
            }
            
            // Set up edit package functionality
            const editButtons = document.querySelectorAll('.edit-package-btn');
            editButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const packageId = this.getAttribute('data-package-id');
                    
                    // In a real implementation, you would fetch package data via AJAX
                    // For demo purposes, we'll set values based on the package ID
                    
                    // Set the package ID in the hidden input
                    const editPackageIdInput = document.getElementById('editPackageId');
                    if (editPackageIdInput) {
                        editPackageIdInput.value = packageId;
                    }
                    
                    // Set the form action with the package ID
                    const editForm = document.getElementById('editPackageForm');
                    if (editForm) {
                        editForm.action = '/admin/credits/edit/' + packageId;
                    }
                    
                    // Populate form fields with mock data based on package ID
                    document.getElementById('editPackageName').value = packageId.charAt(0).toUpperCase() + packageId.slice(1) + ' Package';
                    
                    if (packageId === 'small') {
                        document.getElementById('editPackageCredits').value = "10";
                        document.getElementById('editPackagePrice').value = "9.99";
                        document.getElementById('editPackageDescription').value = "Basic credit package for small tasks";
                        document.getElementById('editPackageDiscount').value = "0";
                        document.getElementById('editPackageOrder').value = "1";
                        document.getElementById('editPackageIsFeatured').checked = false;
                    } else if (packageId === 'medium') {
                        document.getElementById('editPackageCredits').value = "50";
                        document.getElementById('editPackagePrice').value = "39.99";
                        document.getElementById('editPackageDescription').value = "Standard credit package for regular users";
                        document.getElementById('editPackageDiscount').value = "20";
                        document.getElementById('editPackageOrder').value = "2";
                        document.getElementById('editPackageIsFeatured').checked = true;
                    } else if (packageId === 'large') {
                        document.getElementById('editPackageCredits').value = "100";
                        document.getElementById('editPackagePrice').value = "69.99";
                        document.getElementById('editPackageDescription').value = "Premium credit package for power users";
                        document.getElementById('editPackageDiscount').value = "0";
                        document.getElementById('editPackageOrder').value = "3";
                        document.getElementById('editPackageIsFeatured').checked = false;
                    }
                    
                    document.getElementById('editPackageIsActive').checked = true;
                });
            });
            
            // Function to delete a credit package
            window.submitDeletePackageForm = function() {
                if (confirm('Are you sure you want to delete this package? This action cannot be undone.')) {
                    const packageId = document.getElementById('editPackageId').value;
                    
                    // In a production environment, you'd submit to the real endpoint
                    // For demo purposes, we'll just show a success message
                    alert('Package deleted successfully!');
                    
                    // Close the modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('editPackageModal'));
                    if (modal) {
                        modal.hide();
                    }
                    
                    /* 
                    // This would be the actual form submission in a real implementation
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = '/admin/credits/delete/' + packageId;
                    
                    // Add CSRF token
                    const csrfToken = document.createElement('input');
                    csrfToken.type = 'hidden';
                    csrfToken.name = '_csrf_token';
                    csrfToken.value = '{{ csrf_token('delete_package') }}';
                    form.appendChild(csrfToken);
                    
                    document.body.appendChild(form);
                    form.submit();
                    */
                }
            };
            
            // Set up promotion type toggle
            const promotionTypeSelect = document.getElementById('promotionType');
            const discountSection = document.querySelector('.promotion-discount');
            const bonusSection = document.querySelector('.promotion-bonus');
            
            if (promotionTypeSelect && discountSection && bonusSection) {
                promotionTypeSelect.addEventListener('change', function() {
                    if (this.value === 'discount') {
                        discountSection.classList.remove('d-none');
                        bonusSection.classList.add('d-none');
                    } else {
                        discountSection.classList.add('d-none');
                        bonusSection.classList.remove('d-none');
                    }
                });
            }
            
            // Set up promotion form submission
            const savePromotionBtn = document.getElementById('savePromotionBtn');
            const creditPromotionForm = document.getElementById('creditPromotionForm');
            
            if (savePromotionBtn && creditPromotionForm) {
                savePromotionBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Basic form validation
                    const promotionName = document.getElementById('promotionName').value;
                    const startDate = document.getElementById('promotionStartDate').value;
                    const endDate = document.getElementById('promotionEndDate').value;
                    
                    if (!promotionName.trim()) {
                        alert('Please enter a promotion name');
                        return;
                    }
                    
                    if (!startDate) {
                        alert('Please select a start date');
                        return;
                    }
                    
                    if (!endDate) {
                        alert('Please select an end date');
                        return;
                    }
                    
                    if (new Date(startDate) > new Date(endDate)) {
                        alert('End date must be after start date');
                        return;
                    }
                    
                    // In a production environment, you'd submit to the real endpoint
                    // For demo purposes, we'll just show a success message
                    alert('Promotion created successfully!');
                    
                    // Close the modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('creditPromotionModal'));
                    if (modal) {
                        modal.hide();
                    }
                    
                    // Reset form
                    creditPromotionForm.reset();
                });
            }
            
            // Set default dates for promotion form
            const promotionStartDate = document.getElementById('promotionStartDate');
            const promotionEndDate = document.getElementById('promotionEndDate');
            
            if (promotionStartDate && promotionEndDate) {
                const today = new Date();
                const nextMonth = new Date();
                nextMonth.setMonth(today.getMonth() + 1);
                
                promotionStartDate.valueAsDate = today;
                promotionEndDate.valueAsDate = nextMonth;
            }
            
            // Initialize charts for the statistics section
            // This is a placeholder for actual chart implementation
            function initCharts() {
                // In a real implementation, you would use Chart.js or another library
                console.log('Charts would be initialized here');
            }
            
            // Call chart initialization
            initCharts();
        });
    </script>
{% endblock %}